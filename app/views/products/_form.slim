.form
	= form_with model: @product do |form|

		.field
			= form.label :name, :class => "label"
			.control
				= form.text_field :name, :required => true, :placeholder => "Product name", :class => "input"

		.field
			= form.label :price, :class => "label"
			.control
				= form.text_field :price, :required => true, :placeholder => "Product price", :class => "input"

		.field
			= form.label :price_currency, "Currency", :class => "label"
			.control
				.select
					= form.select :price_currency, Money::Currency.table.keys

		.field
			= form.label :downloadtype, "Type", :class => "label"
			.control
				= form.text_field :downloadtype, :placeholder => "e.g. Ebook / PDF / Photoshop file", :class => "input"
				p.help Help customers understand what they are buying


		.field.filepicker
			= form.label :image, :class => "label"
			- if !@product.image.present? || params[:reupload_image]
				.file.has-name
					label.file-label
						= form.file_field :image, :required => true, :class => "file-input"
						span.file-cta
							span.file-label Choose a product image...
						span.file-name
				p.help Must be either a jpg, gif or png
			- else
				.control
					.columns
						.column.is-one-quarter
							figure.image 
								img src="#{@product.image.url(:large)}"
							p.help 
								a href="#{edit_product_path(:reupload_image => true)}" Upload a different product image

		.field.filepicker
			= form.label :file, :class => "label"
			- if !@product.file.present? || params[:reupload_file]
				.file.has-name
					label.file-label
						= form.file_field :file, :required => true, :class => "file-input"
						span.file-cta
							span.file-label Choose a file...
						span.file-name
				p.help Must be either a zip or pdf file
			- else
				.control
					input type="text" class="input" disabled="disabled" value="#{@product.file_file_name}"
					p.help 
						a href="#{edit_product_path(:reupload_file => true)}" Upload a different file





		.field
			= form.label :intro, :class => "label"
			.control
				= form.text_field :intro, :required => true, :maxlength => 140, :placeholder => "Product intro", :class => "input"
				p.help A short description of this product &mdash; <span id="chars_left">140</span> characters left


		.field
			= form.label :description, "Full description", :class => "label"
			.control
				= form.text_area :description, :placeholder => "Product description", :class => "textarea"
				p.help <i>Optional field</i> Supports markdown

		.field
			= form.label :live, "Product is live?", :class => "label"
			.control
				.select
					= form.select :live, [true, false]

		.actionbutton
			= form.submit :value => "Save Product", :data => {:disable_with => "Saving"}, :class => "button is-primary"